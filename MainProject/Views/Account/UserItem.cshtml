@using MainProject.Controllers
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject RoleManager<IdentityRole> RoleManager
@model Message
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    string userId = ViewBag.SelectedUser;
    var curUser = new User();
    if (SignInManager.IsSignedIn(User))
    {
        curUser = await UserManager.GetUserAsync(User);
    }

    string GetUserName(string userId)
    {
        return AccountController.dbContext.Users.First(x => x.Id == userId).Name;
    }

    string DateReturn(DateTime date)
    {
        string minus;
        int min = 0;
        if (DateTime.Now - date < TimeSpan.FromMinutes(60))
        {
            minus = Convert.ToInt32((DateTime.Now - date).TotalMinutes).ToString();
            return $"{minus} minutes ago";
        }
        else if (DateTime.Now - date > TimeSpan.FromHours(24))
        {
            min = Convert.ToInt32((DateTime.Now - date).TotalDays);
            if (min > 1)
            {
                return $"{min} days ago at {date.ToString("HH:mm")}";
            }
            else
            {
                return $"{min} day ago at {date.ToString("HH:mm")}";
            }
        }
        else/* if(DateTime.Now - date >= TimeSpan.FromMinutes(60))*/
        {
            return string.Format("{0:00}:{1:00} ago", (int)(DateTime.Now - date).TotalHours, (DateTime.Now - date).Minutes);
        }
    }

    string getUrlImage(string id)
    {
        return AccountController.cloudinary.GetResource(id).Url;
    }
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet">
<div class="marketing-site-content-section">
    <div class="marketing-site-content-section-img">
        @if (ViewBag.SelectedItem.Image == null)
        {
            <img src="~/photos/default_image_01-1024x1024-300x225.png" alt="" />
        }
        else
        {
            <img src="@getUrlImage(ViewBag.SelectedItem.Image)" width="300" height="225" role="img" />
        }
    </div>
    @*<div class="marketing-site-content-section-block">
            <h3 class="marketing-site-content-section-block-header">Yeti Snowcone Agency</h3>
            <p class="marketing-site-content-section-block-subheader subheader">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam omnis, maxime libero natus qui minus!</p>
            <a href="#" class="round button small">learn more</a>
        </div>*@
    <div class="marketing-site-content-section-block small-order-2 medium-order-1">
        <h3 class="marketing-site-content-section-block-header">@ViewBag.SelectedItem.Name</h3>
        <p class="marketing-site-content-section-block-subheader subheader">@ViewBag.SelectedItem.Description</p>
        @foreach (var extra in ViewBag.SelectedItem.ExtraFieldValues)
        {
            <p class="marketing-site-content-section-block-subheader subheader">@extra.ExtraFieldName: @extra.Value</p>
        }
        @foreach (var tag in ViewBag.SelectedItem.Tags)
        {
            <a class="marketing-site-content-section-block-subheader subheader" asp-action="SearchByTag" asp-route-tag="@tag.Name">#@tag.Name</a>
        }
    </div>
</div>

<label>@Localizer["Likes"]: @ViewBag.SelectedItem.LikeCount</label>
@if (SignInManager.IsSignedIn(User))
{
    @if (curUser.Id == userId
     || User.IsInRole("admin"))
    {
        <form asp-action="LikeItem" asp-controller="Account">
            <div class="ui left labeled button" tabindex="0">
                <input name="itemId" value="@ViewBag.SelectedItem.Id" hidden />
                <input name="userId" value="@curUser.Id" hidden />
                <input name="userCollectionId" value="@ViewBag.SelectedCollection" hidden />
                <button class="button button-like" type="submit">
                    <i class="fa fa-heart"></i>
                    <span>@ViewBag.SelectedItem.LikeCount</span>
                </button>
            </div>
        </form>
    }
}
<script>
    $(document).foundation();

    $(function () {
        $('.button-like')
            .bind('click', function (event) {
                $(".button-like").toggleClass("liked");
            })
    });
</script>
<div class="ui comments">
    <h3 class="ui dividing header">@Localizer["Comments"]</h3>
    @foreach (var item in ViewBag.SelectedItem.Chat)
    {
        <div class="comment">
            <div class="content">
                <a class="author">@GetUserName(item.Sender)</a>
                <div class="metadata">
                    <span class="date">@DateReturn(item.When)</span>
                </div>
                <div class="text">
                    @item.Text
                </div>
            </div>
        </div>
    }
    <div id="chatroom">

    </div>
    <div id="inputForm">
        @if (SignInManager.IsSignedIn(User))
        {

            <input type="text" id="userId" value="@ViewBag.SelectedItem.UserId" hidden />
            <input type="text" id="collectionId" value="@ViewBag.SelectedItem.UserCollectionsId" hidden />
            <input type="text" id="itemId" value="@ViewBag.SelectedItem.Id" hidden />
            <input type="text" id="curUserId" value="@curUser.Id" hidden />
            <input type="text" id="curUserName" value="@GetUserName(curUser.Id)" hidden />
            <input type="text" id="message" />
            <input type="button" id="sendBtn" value="@Localizer["Send"]" />
        }
        <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
        <script>
            const hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("/chat")
                .build();

            let userName = '';
            // получение сообщения от сервера
            hubConnection.on('Send', function (message, userName, when) {

                newRowAdd = '<div class="comment">' +
                    '<div class="content">' +
                    '<a class="author">' + userName + '</a>' +
                    '<div class="metadata">' +
                    '<span class="date">' + when + '</span>' +
                    '</div>' +
                    '<div class="text">' +
                    message +
                    '</div>' +
                    '</div>' +
                    '</div>';
                // создаем элемент <b> для имени пользователя
                let userNameElem = document.createElement("b");
                userNameElem.appendChild(document.createTextNode(userName + ': '));

                // создает элемент <p> для сообщения пользователя
                let elem = document.createElement("p");
                elem.appendChild(userNameElem);
                elem.appendChild(document.createTextNode(message));
                elem.appendChild(document.createTextNode(when));

                $('#chatroom').append(newRowAdd);

            });

            // отправка сообщения на сервер
            document.getElementById("sendBtn").addEventListener("click", function (e) {
                let message = document.getElementById("message").value;
                let userId = document.getElementById("userId").value;
                let collectionId = document.getElementById("collectionId").value;
                let itemId = document.getElementById("itemId").value;
                let curUserId = document.getElementById("curUserId").value;
                let curUserName = document.getElementById("curUserName").value;
                hubConnection.invoke("Send", userId, collectionId, itemId, message,
                    curUserId, curUserName);
                document.getElementById("message").value = "";
            });

            hubConnection.start();
        </script>
    </div>
</div>